{"version":3,"sources":["../src/server.js"],"names":["GRAPHQL_PORT","graphQLServer","then","schema","console","log","use","json","endpointURL","listen"],"mappings":";;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;AAEA,MAAMA,eAAe,IAArB;;AAEA,MAAMC,gBAAgB,wBAAtB;;AAEA,iBAAOC,IAAP,CAAaC,MAAD,IAAY;AACtBC,UAAQC,GAAR,CAAY,GAAZ;AACAJ,gBAAcK,GAAd,CAAkB,UAAlB,EAA8B,qBAAWC,IAAX,EAA9B,EAAiD,yCAAe,EAACJ,MAAD,EAAf,CAAjD;AACAF,gBAAcK,GAAd,CAAkB,WAAlB,EAA+B,0CAAgB,EAACE,aAAa,UAAd,EAAhB,CAA/B;;AAEAP,gBAAcQ,MAAd,CAAqBT,YAArB,EAAmC,MAAMI,QAAQC,GAAR,CACtC,+CAA8CL,YAAa,WADrB,CAAzC;AAID,CATD","file":"server.js","sourcesContent":["import express from 'express'\nimport { graphqlExpress, graphiqlExpress } from 'apollo-server-express'\nimport bodyParser from 'body-parser'\nimport schema from './data/schema'\n\nconst GRAPHQL_PORT = 3000\n\nconst graphQLServer = express()\n\nschema.then((schema) => {\n  console.log('2')\n  graphQLServer.use('/graphql', bodyParser.json(), graphqlExpress({schema}))\n  graphQLServer.use('/graphiql', graphiqlExpress({endpointURL: '/graphql'}))\n\n  graphQLServer.listen(GRAPHQL_PORT, () => console.log(\n    `GraphiQL is now running on http://localhost:${GRAPHQL_PORT}/graphiql`\n  ))\n\n})"]}