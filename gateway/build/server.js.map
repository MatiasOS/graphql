{"version":3,"sources":["../src/server.js"],"names":["GRAPHQL_PORT","graphQLServer","use","json","schema","endpointURL","listen","console","log"],"mappings":";;AAAA;;;;AACA;;AACA;;;;AACA;;;;AAEA,MAAMA,eAAe,IAArB;;AAEA,MAAMC,gBAAgB,wBAAtB;;AAEAA,cAAcC,GAAd,CAAkB,UAAlB,EAA8B,qBAAWC,IAAX,EAA9B,EAAiD,yCAAe,EAACC,sBAAD,EAAf,CAAjD;AACAH,cAAcC,GAAd,CAAkB,WAAlB,EAA+B,0CAAgB,EAACG,aAAa,UAAd,EAAhB,CAA/B;;AAEAJ,cAAcK,MAAd,CAAqBN,YAArB,EAAmC,MAAMO,QAAQC,GAAR,CACtC,+CAA8CR,YAAa,WADrB,CAAzC","file":"server.js","sourcesContent":["import express from 'express'\nimport { graphqlExpress, graphiqlExpress } from 'apollo-server-express'\nimport bodyParser from 'body-parser'\nimport { schema }from './data/schema'\n\nconst GRAPHQL_PORT = 3004\n\nconst graphQLServer = express()\n\ngraphQLServer.use('/graphql', bodyParser.json(), graphqlExpress({schema}))\ngraphQLServer.use('/graphiql', graphiqlExpress({endpointURL: '/graphql'}))\n\ngraphQLServer.listen(GRAPHQL_PORT, () => console.log(\n  `GraphiQL is now running on http://localhost:${GRAPHQL_PORT}/graphiql`\n))\n"]}